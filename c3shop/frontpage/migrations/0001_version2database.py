# Generated by Django 2.2.4 on 2019-08-02 08:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.CharField(help_text='The price of the article', max_length=10)),
                ('largeText', models.CharField(help_text='The markdown text of the article', max_length=15000)),
                ('type', models.SmallIntegerField(help_text='The type of article (e.g. for example a t-shirt')),
                ('description', models.CharField(help_text='A short description of the article (e.g. heading)', max_length=100)),
                ('visible', models.BooleanField(help_text='Should the article be visible to the public yet?')),
                ('quantity', models.IntegerField(help_text='How many articles of this kind are left?')),
                ('size', models.CharField(help_text='The size of the article', max_length=10)),
                ('cachedText', models.CharField(help_text='The compiled markdown long text', max_length=15000)),
                ('chestsize', models.IntegerField(help_text="This field defines the unique chest size of the article. If it's 0 it willdefault to the chest size defined in the settings.")),
                ('underConstruction', models.BooleanField(default=False, help_text='If this is set to true thearticle is being constructed')),
            ],
        ),
        migrations.CreateModel(
            name='Hint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head', models.CharField(help_text='This is the headline of the message', max_length=250)),
                ('text', models.CharField(help_text='This is the body of the message', max_length=16384)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='The category of the media', max_length=25)),
                ('headline', models.CharField(help_text='The heading of the image', max_length=50)),
                ('text', models.CharField(help_text='A longer text matching the image', max_length=15000)),
                ('cachedText', models.CharField(help_text='The compiled version of the markdown >text<', max_length=15000)),
                ('lowResFile', models.CharField(help_text='A link to a low resolution version of the image', max_length=15000)),
                ('highResFile', models.CharField(help_text='A link to a high resolution version of the image', max_length=15000)),
                ('uploadTimestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('authuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('creationTimestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.CharField(help_text='some notes on the user (for example additional contact channels)', max_length=15000)),
                ('active', models.BooleanField(default=True)),
                ('mustChangePassword', models.BooleanField(default=False, help_text='If true the user is required to change the password on next login')),
                ('dect', models.IntegerField(help_text='This is the DECT number that will be displayed on the printed orders.')),
                ('rights', models.SmallIntegerField()),
                ('displayName', models.CharField(max_length=75)),
                ('pgp_keyfingerprint', models.CharField(default='', max_length=16384)),
                ('number_of_allowed_reservations', models.SmallIntegerField(default=1, help_text='This specifies the amount of reservations a user isallowed to add, default is 1, -1 means unlimited')),
                ('must_change_password', models.BooleanField(default=False, help_text='If True the user must change the password on next login')),
                ('next_login_announcement', models.CharField(help_text='If not null it will be displayed on next login', max_length=16384, null=True)),
                ('avatarMedia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Media')),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('SName', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('property', models.CharField(max_length=15000)),
                ('requiredLevel', models.SmallIntegerField()),
                ('changeTimestamp', models.DateTimeField(auto_now_add=True)),
                ('changeReason', models.CharField(max_length=15000, null=True)),
                ('changedByUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('cacheText', models.CharField(help_text='The compiled version of the markdown >text<', max_length=15000)),
                ('visibleLevel', models.SmallIntegerField(help_text='What access level does the viewer need to have a look at this')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('text', models.CharField(help_text='The markdown version of the article text', max_length=15000)),
                ('createdByUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='MediaUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Media')),
                ('UID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='GroupReservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ready', models.BooleanField()),
                ('open', models.BooleanField()),
                ('notes', models.CharField(max_length=15000)),
                ('pickupDate', models.DateTimeField()),
                ('responsiblePerson', models.CharField(default=None, max_length=50, null=True)),
                ('submitted', models.BooleanField(default=False, help_text='This determines if a reservation is still under construction or already submitted')),
                ('createdByUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleRequested',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.SmallIntegerField()),
                ('notes', models.CharField(max_length=15000)),
                ('AID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Article')),
                ('RID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.GroupReservation')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Article')),
                ('MID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Media')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(help_text='The display name of the article group', max_length=150)),
                ('group_flash_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Media')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='addedByUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Profile'),
        ),
        migrations.AddField(
            model_name='article',
            name='flashImage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Media'),
        ),
        migrations.AddField(
            model_name='article',
            name='group',
            field=models.ForeignKey(help_text='This will be null if the article doesnt belong to a group', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.ArticleGroup'),
        ),
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('key', models.CharField(help_text='The key sequence', max_length=64, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(help_text='The user who owns the key', on_delete=django.db.models.deletion.DO_NOTHING, to='frontpage.Profile')),
            ],
        ),
    ]
